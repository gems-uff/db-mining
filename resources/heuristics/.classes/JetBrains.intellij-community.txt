import\s*com\.intellij\.util\.xml\.DomSaxParserTest;
import\s*com\.intellij\.codeInsight\.completion\.XmlCompletionTest;
import\s*com\.intellij\.codeInsight\.daemon\.XmlHighlightingTest;
import\s*com\.intellij\.codeInsight\.daemon\.quickFix\.ExtractExternalResourceLinksTest;
import\s*com\.intellij\.codeInsight\.daemon\.quickFix\.FetchExternalResourcesFixTest;
import\s*com\.intellij\.xml\.index\.XmlSchemaIndexTest;
import\s*org\.intellij\.lang\.regexp\.RegExpWordSelectionFilterTest;
import\s*org\.intellij\.images\.thumbnail\.impl\.ThumbnailViewUI;
import\s*com\.intellij\.refactoring\.inline\.InlineObjectProcessor;
import\s*com\.intellij\.codeInsight\.editorActions\.StringLiteralCopyPasteProcessor;
import\s*com\.intellij\.psi\.impl\.search\.JavaDirectInheritorsSearcher;
import\s*com\.intellij\.psi\.impl\.compiled\.ClsReferenceParameterListImpl;
import\s*None\.formatRearrangeSelection_before;
import\s*None\.formatSelection_DoNotTouchTrailingWhiteSpaces_before;
import\s*None\.formatSelection_before;
import\s*None\.selectedTextAndOptimizeImports_before;
import\s*None\.selectionReformat_before;
import\s*None\.AccessorViaCompletion_after;
import\s*None\.AnonymousProcess_after;
import\s*None\.DontGenerateEqualsHashCodeOnOverrideCompletion_after;
import\s*None\.DontGenerateToStringOnOverrideCompletion_after;
import\s*None\.PreselectEditorSelection;
import\s*None\.RecordAccessorDeclaration_after;
import\s*None\.SuggestToOverrideMethodsWhenTypingOverrideAnnotationBeforeMethod_after;
import\s*None\.SuggestToOverrideMethodsWhenTypingOverrideAnnotation_after;
import\s*None\.AnonymousNonDefaultConstructor_after;
import\s*None\.NewAnonymousInMethodArgTemplate_after;
import\s*None\.NonDefaultConstructor_after;
import\s*None\.CommonPrefixWithSelection;
import\s*None\.DiamondNotCollapsedInCaseOfAnonymousClasses-out;
import\s*None\.ExcessiveTail;
import\s*None\.HonorSelection;
import\s*None\.IfConditionExpectedType-out;
import\s*None\.IgnoreDefaultMethods-out;
import\s*None\.NewAnonymousFunction-out;
import\s*None\.NoWrongSubstitutorFromStats-out;
import\s*None\.WrongAnonymous-out;
import\s*None\.MultipleSelections;
import\s*None\.Selection;
import\s*//java\.aThinlet;
import\s*//java\.aThinlet_hl;
import\s*None\.after1;
import\s*None\.after3;
import\s*None\.after4;
import\s*None\.after5;
import\s*None\.after6;
import\s*None\.afterHierarchy;
import\s*None\.after2;
import\s*None\.after3;
import\s*None\.after4;
import\s*None\.afterDefaultMethod;
import\s*None\.after1;
import\s*None\.after2;
import\s*None\.after3;
import\s*None\.after4;
import\s*None\.after5;
import\s*None\.afterArray1;
import\s*None\.afterArray2;
import\s*None\.afterArray3;
import\s*None\.after2;
import\s*None\.beforeBreakOuterLoop;
import\s*None\.beforeBreakOuterLoopLabel;
import\s*None\.beforeContinueOuterLoop;
import\s*None\.beforeDecreasing;
import\s*None\.beforeDifferentTypes;
import\s*None\.beforeEvenLongDecreasing;
import\s*None\.beforeFold;
import\s*None\.beforeIdentical;
import\s*None\.beforeIrregularNumber;
import\s*None\.beforeOddNumber;
import\s*None\.beforeReassignedVar;
import\s*None\.beforeSimple;
import\s*None\.beforeThreeLines;
import\s*None\.beforeWriting;
import\s*None\.afterEnumConstant;
import\s*None\.afterEnumConstantWithArgs;
import\s*None\.afterGeneric;
import\s*None\.afterSimple;
import\s*None\.afterSkipChildClass;
import\s*None\.afterStaticRef;
import\s*None\.after3;
import\s*None\.afterAnon;
import\s*None\.afterDefaultSuperConstructor;
import\s*None\.afterDisjunction;
import\s*None\.afterImplicitSuperConstructor;
import\s*None\.afterIncompleteEnum;
import\s*None\.afterIncompleteEnum1;
import\s*None\.afterInsertSuper;
import\s*None\.after2;
import\s*None\.after3;
import\s*None\.after4;
import\s*None\.after5;
import\s*None\.afterArrayTypeParam;
import\s*None\.afterAssertDescription;
import\s*None\.afterClassTypeParamNotAvailable;
import\s*None\.afterGenerics1;
import\s*None\.afterIDEA2327;
import\s*None\.afterIDEADEV6068;
import\s*None\.afterLambdaArgument;
import\s*None\.afterMethodReferenceArgument;
import\s*None\.afterMethodTypeParamBecomeClassTypeParameter;
import\s*None\.afterMethodTypeParamUsed;
import\s*None\.afterMethodTypeParamUsed1;
import\s*None\.afterMethodTypeParamWithNestedClass;
import\s*None\.afterMultipleTypes;
import\s*None\.afterNoQualification;
import\s*None\.afterSCR6758;
import\s*None\.afterSCR6826;
import\s*None\.afterStaticMethodNotInInterface;
import\s*None\.afterThisCall;
import\s*None\.after1;
import\s*None\.afterAbstractMethod;
import\s*None\.afterConstructor;
import\s*None\.afterReturnValue;
import\s*None\.afterTypeParams;
import\s*None\.afterVarargs;
import\s*None\.beforeMultipleExits;
import\s*None\.after1;
import\s*None\.after2;
import\s*None\.after4;
import\s*None\.beforeLiteralRightSubSelection;
import\s*None\.afterMalformedSeeLink;
import\s*None\.after1;
import\s*None\.after2;
import\s*None\.after3;
import\s*None\.after4;
import\s*None\.after5;
import\s*None\.after6;
import\s*None\.beforeDeclarationConflict;
import\s*None\.beforeDeclarationConflict2;
import\s*None\.beforeDeclarationConflictPattern;
import\s*None\.beforeDeclarationUsedOutside;
import\s*None\.beforeMultipleStatements;
import\s*None\.afterProtectedMethod;
import\s*None\.afterLambdaCodeBlock;
import\s*None\.MoveThroughFolding-after;
import\s*None\.MoveThroughFolding;
import\s*None\.CommentAsFirstCodeBlockSurroundStatement;
import\s*None\.CommentAsFirstDoWhileSurroundStatement;
import\s*None\.CommentAsFirstDoWhileSurroundStatement_after;
import\s*None\.CommentAsFirstForSurroundStatement;
import\s*None\.CommentAsFirstIfElseSurroundStatement;
import\s*None\.CommentAsFirstIfSurroundStatement;
import\s*None\.CommentAsFirstRunnableSurroundStatement;
import\s*None\.CommentAsFirstSynchronizedSurroundStatement;
import\s*None\.CommentAsFirstTryCatchFinallySurroundStatement;
import\s*None\.CommentAsFirstTryCatchFinallySurroundStatement_after;
import\s*None\.CommentAsFirstTryCatchSurroundStatement;
import\s*None\.CommentAsFirstTryCatchSurroundStatement_after;
import\s*None\.CommentAsFirstTryFinallySurroundStatement;
import\s*None\.CommentAsFirstWhileSurroundStatement;
import\s*None\.CommentAsFirstWhileSurroundStatement_after;
import\s*None\.LocalClasses;
import\s*None\.PsiTextConsistentAfterSurround;
import\s*None\.SurroundAssignmentWithCast;
import\s*None\.SurroundBinaryWithCast;
import\s*None\.SurroundConditionalWithCast;
import\s*None\.SurroundExpressionWithCastEmptyLineAfter;
import\s*None\.SurroundExpressionWithCastEmptyLineAfter_2;
import\s*None\.SurroundExpressionWithElseIf;
import\s*None\.SurroundExpressionWithElseIfElse;
import\s*None\.SurroundExpressionWithIf;
import\s*None\.SurroundExpressionWithIfForBoxedBooleans;
import\s*None\.SurroundExpressionWithNotForBoxedBooleans;
import\s*None\.SurroundIfBranchWithNoBracesAndComment;
import\s*None\.SurroundNonExpressionWithCast;
import\s*None\.SurroundNonExpressionWithNot;
import\s*None\.SurroundNonExpressionWithParenthesis;
import\s*None\.SurroundSwitchBreakWithIf;
import\s*None\.SurroundSwitchCaseWithIf;
import\s*None\.SurroundWithNotNullCheck;
import\s*None\.SurroundWithTryCatchFunctionalExpression;
import\s*None\.SurroundWithTryCatchProperties;
import\s*None\.SurroundWithTryFinallyUsingIndents;
import\s*None\.CaseBlockWithIf;
import\s*None\.CaseResultWithIf;
import\s*None\.CaseResultWithSynchronized;
import\s*None\.CaseThrowWithBlock;
import\s*None\.CaseThrowWithIf;
import\s*None\.CaseThrowWithTryCatch;
import\s*None\.CatchBlockWithFor;
import\s*None\.CatchResultWithFor;
import\s*None\.DefaultBlockWithDoWhile;
import\s*None\.DefaultBlockWithTryFinally;
import\s*None\.DefaultResultWithRunnable;
import\s*None\.DefaultResultWithTryCatchFinally;
import\s*None\.DefaultResultWithWhile;
import\s*None\.DefaultThrowWithIfElse;
import\s*None\.Test1;
import\s*None\.Test2;
import\s*None\.indentSelection_after;
import\s*None\.indentSelection_before;
import\s*None\.unindentSelection_after;
import\s*None\.unindentSelection_before;
import\s*None\.ConvertFinalLineComment2;
import\s*None\.ConvertFinalLineComment3;
import\s*None\.ConvertManyEndOfLineComments;
import\s*None\.ConvertMixed;
import\s*None\.ConvertMultiLongLine;
import\s*None\.IfChainSelection;
import\s*None\.IfChainSelection_after;
import\s*None\.afterAnnotation;
import\s*None\.afterClone;
import\s*None\.afterErasureWildcard;
import\s*None\.afterExtensionMethods1;
import\s*None\.afterExtensionMethods2;
import\s*None\.afterImplementExtensionMethods;
import\s*None\.afterInterfaceAndAbstractClass;
import\s*None\.afterMultipleInterfaceInheritance;
import\s*None\.afterMultipleSuperMethodsThroughGenerics;
import\s*None\.afterOnTheLineWithExistingExpression;
import\s*None\.afterOverrideExtensionMethods;
import\s*None\.afterRawInheritanceWithMethodTypeParameters;
import\s*None\.afterSimple;
import\s*None\.afterSimplifyObjectWildcard;
import\s*None\.afterTestMissed;
import\s*None\.afterWildcard;
import\s*None\.IterForceBraces-out;
import\s*None\.VarargToar-out;
import\s*None\.EndActionWithSelectionOutsideVariableSegment_after;
import\s*None\.EndActionWithSelectionWithExistingSelection_after;
import\s*None\.EndActionWithSelection_after;
import\s*None\.HomeActionWithSelectionOutsideVariableSegment_after;
import\s*None\.HomeActionWithSelectionWithExistingSelection_after;
import\s*None\.HomeActionWithSelection_after;
import\s*None\.AndAllTrue;
import\s*None\.AndChainCause;
import\s*None\.AndChainDependentCause;
import\s*None\.ArrayBlockingQueueContract;
import\s*None\.ArrayLength;
import\s*None\.ArrayLengthCollectionSize;
import\s*None\.AssignTernaryNotNull;
import\s*None\.AssignTernaryNumeric;
import\s*None\.AssignTrue;
import\s*None\.AssignmentChain;
import\s*None\.BasedOnPreviousRelation;
import\s*None\.BasedOnPreviousRelationContracts;
import\s*None\.BooleanChecked;
import\s*None\.BooleanReassignedMultipleTimes;
import\s*None\.BooleanUnderNegation;
import\s*None\.ClassCheckInStream;
import\s*None\.CollectionSizeEquality;
import\s*None\.ComplexDisjunction;
import\s*None\.ConstantStrings;
import\s*None\.ConstantStrings2;
import\s*None\.Constants;
import\s*None\.ConstructorDependOnInitializer;
import\s*None\.ConstructorSimple;
import\s*None\.Ditto;
import\s*None\.EmptyCollectionSimple;
import\s*None\.EnumCompare;
import\s*None\.EqualsContract;
import\s*None\.EqualsLessEquals;
import\s*None\.EqualsNull;
import\s*None\.FailingCall;
import\s*None\.FinalFieldInitialized;
import\s*None\.FinalFieldInitializedCtor;
import\s*None\.IfBothNotNull;
import\s*None\.IfBothNotNullReassign;
import\s*None\.IndexOfPlusOne;
import\s*None\.InstanceOfChain;
import\s*None\.InstanceOfChain2;
import\s*None\.InstanceOfConflict;
import\s*None\.InstanceOfMethodReturn;
import\s*None\.InstanceOfNull;
import\s*None\.InstanceOfPreviousCast;
import\s*None\.InstanceOfRedundant;
import\s*None\.InstanceOfSecondCheck;
import\s*None\.ListAddContract;
import\s*None\.MaxParameter;
import\s*None\.MergeOnAnd;
import\s*None\.ModOutOfRange;
import\s*None\.NotInstanceOf;
import\s*None\.NotNullAnnotated;
import\s*None\.NotNullAssignmentInside;
import\s*None\.NotNullObvious;
import\s*None\.NotNullParameter;
import\s*None\.NotNullParameterAssigned;
import\s*None\.NpeAnnotation;
import\s*None\.NpeSimple;
import\s*None\.NpeWithCast;
import\s*None\.NullCheckNpeNullCheck;
import\s*None\.NullWasChecked;
import\s*None\.NullWasCheckedInstanceOf;
import\s*None\.NullWasCheckedNullAssigned;
import\s*None\.NumericCast;
import\s*None\.NumericCast2;
import\s*None\.NumericWidening;
import\s*None\.OddityCheck;
import\s*None\.OrChainCause;
import\s*None\.ParameterParentheses;
import\s*None\.ParameterTernary;
import\s*None\.ParameterTernary2;
import\s*None\.PassedNotNull;
import\s*None\.ReassignAfterCheck;
import\s*None\.Reboxing;
import\s*None\.RepeatingIntegerComparison;
import\s*None\.RepeatingIntegerComparisonThreeBranches;
import\s*None\.ReturnThis;
import\s*None\.SimpleContract;
import\s*None\.SimpleContract2;
import\s*None\.SimpleDeref;
import\s*None\.StringLength;
import\s*None\.SubStringEqualsIgnoreCase;
import\s*None\.SubStringEqualsIgnoreCase2;
import\s*None\.TripleCheck;
import\s*None\.TrivialContract;
import\s*None\.WrongCastSimple;
import\s*None\.WrongCastThreeStates;
import\s*None\.WrongCastTwoStates;
import\s*com\.intellij\.openapi\.editor\.impl\.bigFile;
import\s*com\.intellij\.openapi\.editor\.impl\.bigFile;
import\s*//java\.Thinlet;
import\s*//java\.ThinletBig;
import\s*None\.DeleteParamInSuperUsed;
import\s*None\.AnonInner;
import\s*None\.ArgumentFoldingMethodCall;
import\s*None\.ArgumentFoldingWholeStatement;
import\s*None\.ArgumentFoldingWholeStatementForUpdate;
import\s*None\.ArgumentFoldingWholeStatementForUpdateList;
import\s*None\.ArrayAccess;
import\s*None\.ArrayAccess1;
import\s*None\.ArrayAccessWithDuplicates;
import\s*None\.ArrayAccessWithLocalIndex;
import\s*None\.ArrayAccessWithTopExpression;
import\s*None\.ArrayReturnType;
import\s*None\.AvoidGenericArgumentCast;
import\s*None\.AvoidGenericArgumentCastLocalClass;
import\s*None\.BeforeCommentAfterSelectedFragment;
import\s*None\.BooleanExpression;
import\s*None\.BoxedConditionalReturn;
import\s*None\.BuilderChainWith2DimArrayAccess;
import\s*None\.BuilderChainWithArrayAccess;
import\s*None\.BuilderChainWithArrayAccessExpr;
import\s*None\.BuilderChainWithArrayAccessIf;
import\s*None\.CallChainExpression;
import\s*None\.CallOn2DimArrayElement;
import\s*None\.CallOnArrayElement;
import\s*None\.CallOnFieldArrayElement;
import\s*None\.CantPassFieldAsParameter;
import\s*None\.Cast4ParamGeneration;
import\s*None\.CastWhenDuplicateReplacement;
import\s*None\.ChainedConstructor;
import\s*None\.ChainedConstructorDuplicates;
import\s*None\.ChainedConstructorInvalidDuplicates;
import\s*None\.ChangedReturnType;
import\s*None\.CheckQualifierMapping;
import\s*None\.ClassReference;
import\s*None\.ClassReference2;
import\s*None\.CodeDuplicates;
import\s*None\.CodeDuplicates2;
import\s*None\.CodeDuplicates3;
import\s*None\.CodeDuplicates4;
import\s*None\.CodeDuplicates5;
import\s*None\.CodeDuplicatesVarargsShouldNotChangeReturnType;
import\s*None\.CodeDuplicatesWithComments;
import\s*None\.CodeDuplicatesWithContinue;
import\s*None\.CodeDuplicatesWithContinueNoReturn;
import\s*None\.CodeDuplicatesWithEmptyStatementsBlocksParentheses;
import\s*None\.CodeDuplicatesWithMultExitPoints;
import\s*None\.CodeDuplicatesWithOutputValue;
import\s*None\.CodeDuplicatesWithOutputValue1;
import\s*None\.CodeDuplicatesWithReturn;
import\s*None\.CodeDuplicatesWithReturn2;
import\s*None\.CodeDuplicatesWithReturnInAnonymous;
import\s*None\.CodeDuplicatesWithStaticInitializer;
import\s*None\.ComplexTypeParams;
import\s*None\.ConditionalExitCombinedWithNullabilityShouldPreserveVarsUsedInExitStatements;
import\s*None\.ConditionalReturnInDuplicate;
import\s*None\.ConditionalReturnVsAssignDuplicate;
import\s*None\.ConditionalWithTwoParameters;
import\s*None\.ConflictingAnonymous;
import\s*None\.ConstantConditionsAffectingControlFlow;
import\s*None\.ConstantConditionsAffectingControlFlow1;
import\s*None\.ContinueInside;
import\s*None\.CopyParamAnnotations;
import\s*None\.DecrementDifferentChainedFieldsDuplicate;
import\s*None\.DecrementDifferentFieldsDuplicate;
import\s*None\.DecrementDifferentInnerFieldsDuplicate;
import\s*None\.DecrementDifferentOuterFieldsDuplicate;
import\s*None\.DecrementDifferentStaticFieldsDuplicate;
import\s*None\.DefaultNamesConflictResolution;
import\s*None\.DifferentAnnotations;
import\s*None\.DisabledParam;
import\s*None\.DisjunctionType;
import\s*None\.DontMakeParametersFinalDueToUsagesInsideAnonymous;
import\s*None\.DontSkipVariablesUsedInLeftSideOfAssignments;
import\s*None\.DuplicateInUnreachableCode;
import\s*None\.DuplicatePreserveComments;
import\s*None\.DuplicateSubexpression;
import\s*None\.DuplicateSubexpressionWithParentheses;
import\s*None\.DuplicatesFromAnonymous;
import\s*None\.DuplicatesFullyQualifiedType;
import\s*None\.EffectivelyLocalVariables;
import\s*None\.EffectivelyLocalWithinExpression;
import\s*None\.EmptyBlockStatement;
import\s*None\.EmptyParenthesis;
import\s*None\.ExactDuplicateDeclaredReusedVariable;
import\s*None\.ExactDuplicateTwoDeclaredReusedVariables;
import\s*None\.ExitPoints1;
import\s*None\.ExitPoints10;
import\s*None\.ExitPoints11;
import\s*None\.ExitPoints2;
import\s*None\.ExitPoints3;
import\s*None\.ExitPoints4;
import\s*None\.ExitPoints4Nullable;
import\s*None\.ExitPoints5;
import\s*None\.ExitPoints6;
import\s*None\.ExitPoints7;
import\s*None\.ExitPoints8;
import\s*None\.ExitPoints9;
import\s*None\.ExitPointsInsideLoop;
import\s*None\.Expression;
import\s*None\.ExpressionDuplicates;
import\s*None\.ExtractAssignmentExpression;
import\s*None\.ExtractAssignmentExpressionFromStatement;
import\s*None\.ExtractBareDoWhileBody;
import\s*None\.ExtractBareElseBranch;
import\s*None\.ExtractBareForBody;
import\s*None\.ExtractBareThenBranch;
import\s*None\.ExtractBracedDoWhileBody;
import\s*None\.ExtractBracedElseBranch;
import\s*None\.ExtractFromAnnotation;
import\s*None\.ExtractFromAnnotation1;
import\s*None\.ExtractFromAnonymous;
import\s*None\.ExtractFromCodeBlock;
import\s*None\.ExtractFromFinally;
import\s*None\.ExtractFromTryFinally;
import\s*None\.ExtractFromTryFinally2;
import\s*None\.ExtractUnresolvedLambdaExpression;
import\s*None\.ExtractUnresolvedLambdaParameter;
import\s*None\.ExtractWithLeadingComment;
import\s*None\.ExtractedVariableReused;
import\s*None\.FinalOutputVar;
import\s*None\.FinalParamUsedInsideAnon;
import\s*None\.FinalParams4LocalClasses;
import\s*None\.Finally;
import\s*None\.FoldInWhile;
import\s*None\.FoldedParamNameSuggestion;
import\s*None\.FoldedWithConflictedNames;
import\s*None\.FoldedWithNestedExpressions;
import\s*None\.FoldingWithFieldInvolved;
import\s*None\.FoldingWithFunctionCall;
import\s*None\.ForEach;
import\s*None\.ForceBraces;
import\s*None\.FromDefaultMethodInInterface;
import\s*None\.FromLambdaBody;
import\s*None\.FromLambdaBody1;
import\s*None\.FromLambdaBodyCapturedWildcardParams;
import\s*None\.FromLambdaBodyToAnonymous;
import\s*None\.FromLambdaBodyToToplevelInsideCodeBlock;
import\s*None\.FromLambdaBodyWithReturn;
import\s*None\.FromPrivateMethodInInterface;
import\s*None\.FromStaticMethodInInterface;
import\s*None\.GenericsParameters;
import\s*None\.GuardMethodDuplicates;
import\s*None\.GuardMethodDuplicates1;
import\s*None\.IDEADEV11036;
import\s*None\.IDEADEV11748;
import\s*None\.IDEADEV11848;
import\s*None\.IDEADEV33368;
import\s*None\.IdeaDev2291;
import\s*None\.IncompleteExpression;
import\s*None\.InferredNotNull;
import\s*None\.InferredNotNullInReturnStatement;
import\s*None\.InferredNotNullInReturnStatementDuplicate;
import\s*None\.InlineCreated2ReturnLocalVariablesOnly;
import\s*None\.InsideCommentAfterSelectedFragment;
import\s*None\.InstanceMethodDuplicatesInStaticContext;
import\s*None\.InterfaceMethodVisibility;
import\s*None\.InvalidReference;
import\s*None\.LValueNotDuplicate;
import\s*None\.LeaveCommentsWhenExpressionExtracted;
import\s*None\.LesyaBug;
import\s*None\.LocalClass;
import\s*None\.LocalClassDefinedInMethodWhichIsUsedLater;
import\s*None\.LocalClassUsage;
import\s*None\.LocalVariableAnnotationsOrder;
import\s*None\.LocalVariableModifierList;
import\s*None\.MakeVoidMethodReturnVariable;
import\s*None\.Method2Interface;
import\s*None\.Method2InterfaceFromConstant;
import\s*None\.Method2InterfaceFromStatic;
import\s*None\.MethodAnnotations;
import\s*None\.MultipleVarsInMethodNoReturnStatementAndAssignment;
import\s*None\.NearComment;
import\s*extractMethod\.NoNPE1;
import\s*None\.NoNPE2;
import\s*None\.NoReturnTypesSuggested;
import\s*None\.NoShortCircuit;
import\s*None\.NonFinalWritableParam;
import\s*None\.NonFoldInIfBody;
import\s*None\.NonPhysicalAssumptions;
import\s*None\.NormalExitIf;
import\s*None\.NormalExitTry;
import\s*None\.NotInitializedInsideFinally;
import\s*None\.NotNullArgument0;
import\s*None\.NotNullArgument1;
import\s*None\.NotNullArgument2;
import\s*None\.NotNullArgument3;
import\s*None\.NotNullArgument4;
import\s*None\.NotNullArgument5;
import\s*None\.NotNullArgument6;
import\s*None\.NotNullArgument7;
import\s*None\.NotNullArgumentAnonymousClassBare;
import\s*None\.NotNullArgumentAnonymousClassInIf;
import\s*None\.NotNullArgumentAnonymousClassInIfNoBlock;
import\s*None\.NotNullArgumentLambdaBare;
import\s*None\.NotNullArgumentLambdaInForInitializer;
import\s*None\.NotNullArgumentLambdaInIf;
import\s*None\.NotNullArgumentLambdaInIfInsideBody;
import\s*None\.NotNullArgumentLambdaInIfNoBlock;
import\s*None\.NotNullArgumentLambdaInWhileNoBlock;
import\s*None\.NotNullArgumentLambdaInsideBody;
import\s*None\.NotNullArgumentTooComplexCode;
import\s*None\.NotNullCheckNameConflicts;
import\s*None\.NullableCheck;
import\s*None\.NullableCheck1;
import\s*None\.NullableCheckBreak;
import\s*None\.NullableCheckBreakDuplicate;
import\s*None\.NullableCheckDontMissFinal;
import\s*None\.NullableCheckVoid;
import\s*None\.NullableCheckVoidDuplicate;
import\s*None\.OneBranchAssignment;
import\s*None\.OneLineLambda;
import\s*None\.OneVariableExpression;
import\s*None\.OutputVariableDuplicate;
import\s*None\.OverlappingDuplicate;
import\s*None\.OverloadedMethods;
import\s*None\.OxfordBug;
import\s*None\.ParamDetection;
import\s*None\.ParametersFromAnonymous;
import\s*None\.ParametrizedDuplicateDeclaredOutputVariable;
import\s*None\.ParametrizedDuplicateDeclaredReusedVariable;
import\s*None\.ParametrizedDuplicateExactlyRepeatedArguments;
import\s*None\.ParametrizedDuplicateExpression;
import\s*None\.ParametrizedDuplicateFoldArrayElement;
import\s*None\.ParametrizedDuplicateFoldArrayElementTwoUsages;
import\s*None\.ParametrizedDuplicateFoldListElement;
import\s*None\.ParametrizedDuplicateKeepSignature;
import\s*None\.ParametrizedDuplicateNestedSubexpression;
import\s*None\.ParametrizedDuplicateRepeatedArguments;
import\s*None\.ParametrizedDuplicateTripleRepeatedArguments;
import\s*None\.ParametrizedDuplicateUnfoldArrayArgument;
import\s*None\.ParametrizedMultiDuplicatesFoldArrayElement;
import\s*None\.ParamsUsedInLocalClass;
import\s*None\.PassFieldAsParameterAndMakeStatic;
import\s*None\.PatternVariable;
import\s*None\.PatternVariableIntroduced;
import\s*None\.PatternVariableIntroduced2;
import\s*None\.PatternVariableIntroduced3;
import\s*None\.QualifyWhenConflictingNamePresent;
import\s*None\.ReassignFinalFieldInside;
import\s*None\.ReassignedVarAfterCall;
import\s*None\.RecursiveCallToExtracted;
import\s*None\.RedundantCast;
import\s*None\.RejectParametrizedDuplicate;
import\s*None\.ReturnFromTry;
import\s*None\.ReturnStatementFolding;
import\s*None\.SCR12245;
import\s*None\.SCR15815;
import\s*extractMethod\.SCR27887;
import\s*None\.SCR28427;
import\s*None\.SCR32924;
import\s*None\.SameAnnotations;
import\s*None\.Scr10464;
import\s*None\.Scr6241;
import\s*None\.Scr7091;
import\s*None\.Scr9852;
import\s*None\.ShortCircuit;
import\s*None\.ShortenClassRefsInNewReturnType;
import\s*None\.SimpleArrayAccess;
import\s*None\.SimpleMethodsInOneLine;
import\s*None\.SingleExitPOintWithTryFinally;
import\s*None\.SkipComments;
import\s*None\.SkipThrowsDeclaredInLambda;
import\s*None\.StaticImport;
import\s*None\.StopFolding;
import\s*None\.StopFoldingForArrayWriteAccessInConsequentUsages;
import\s*None\.StopFoldingPostfixInside;
import\s*None\.SuggestChangeSignatureCallToSameClassMethod;
import\s*None\.SuggestChangeSignatureEqualConstExprFolding;
import\s*None\.SuggestChangeSignatureFourOccurrencesTwoLiteralFolding;
import\s*None\.SuggestChangeSignatureFourOccurrencesTwoVariableFolding;
import\s*None\.SuggestChangeSignatureInitialParameterUnused;
import\s*None\.SuggestChangeSignatureLeaveSameExpressionsUntouched;
import\s*None\.SuggestChangeSignatureLongConstExprFolding;
import\s*None\.SuggestChangeSignatureOneParam;
import\s*None\.SuggestChangeSignatureOneParamMultipleTimesInside;
import\s*None\.SuggestChangeSignaturePlusOneFolding;
import\s*None\.SuggestChangeSignatureSameParamNames;
import\s*None\.SuggestChangeSignatureSameSubexpression;
import\s*None\.SuggestChangeSignatureSameSubexpressionWholeLine;
import\s*None\.SuggestChangeSignatureThreeOccurrencesTwoLiteralFolding;
import\s*None\.SuggestChangeSignatureThreeOccurrencesTwoVariableFolding;
import\s*None\.SuggestChangeSignatureTrivialMethod;
import\s*None\.SuggestChangeSignatureTwoFieldInitializers;
import\s*None\.SuggestChangeSignatureVoidCallFolding;
import\s*None\.SuggestChangeSignatureWithArrayFolding;
import\s*None\.SuggestChangeSignatureWithChangedParameterName;
import\s*None\.SuggestChangeSignatureWithFolding;
import\s*None\.SuggestChangeSignatureWithGetterFolding;
import\s*None\.SuggestChangeSignatureWithMultiFolding;
import\s*None\.SuggestChangeSignatureWithOutputVariables;
import\s*None\.SuggestChangeSignatureWithTwoWayFolding;
import\s*None\.TargetAnonymous;
import\s*None\.TheOnlyParenthesisExpressionWhichIsSkippedInControlFlow;
import\s*None\.ThisCall;
import\s*None\.TripleParametrizedDuplicate;
import\s*None\.TryFinally;
import\s*extractMethod\.TryFinallyInsideFor;
import\s*None\.TwoFromThreeEqStatements;
import\s*None\.TypeParamsList;
import\s*None\.TypeParamsListWithRecursiveDependencies;
import\s*None\.TypeUseAnnotationsOnParameter;
import\s*None\.UnusedGenerics;
import\s*None\.UnusedInitializedVar;
import\s*None\.UseParamInCatch;
import\s*None\.UseParamInFinally;
import\s*None\.UseVarAfterCatch;
import\s*None\.UseVarAfterTry;
import\s*None\.UseVarInCatch1;
import\s*None\.UseVarInCatch2;
import\s*None\.UseVarInCatchInvisible;
import\s*None\.UseVarInCatchNested1;
import\s*None\.UseVarInCatchNested2;
import\s*None\.UseVarInFinally1;
import\s*None\.UseVarInFinally2;
import\s*None\.UseVarInOtherCatch;
import\s*session\.toString()\.VarDeclAfterExpressionExtraction;
import\s*None\.VariableInLoopWithConditionalBreak;
import\s*None\.VerboseArrayAccess;
import\s*None\.WriteArrayAccess;
import\s*None\.WriteDifferentFieldsDuplicate;
import\s*None\.CodeDuplicatesWithMultOccurences;
import\s*None\.ArrayFoldingWithDuplicate;
import\s*None\.AvoidChangeSignatureForLocalRefsInCandidate;
import\s*None\.AvoidChangeSignatureForLocalRefsInPattern;
import\s*None\.ChangedVariableDeclaredOnce;
import\s*None\.ConditionalExitPoint;
import\s*None\.ConditionalYield;
import\s*None\.ConflictRename;
import\s*None\.ConflictedNamesFiltered;
import\s*None\.DiamondTypesConsideredAsEqual;
import\s*test\.DisabledOnSwitchRules;
import\s*None\.DuplicateWithAnonymousFieldReference;
import\s*None\.DuplicateWithAnonymousMethodReference;
import\s*None\.DuplicateWithLocalMethodReference;
import\s*None\.DuplicateWithLocalReferenceInLambda;
import\s*None\.DuplicatedButDeclined;
import\s*None\.DuplicatedExpressionAndChangeSignature;
import\s*None\.DuplicatedWithDeclinedChangeSignature;
import\s*None\.ExactDuplicates;
import\s*None\.ExpressionDuplicates;
import\s*test\.ExpressionStatementInSwitchExpression;
import\s*test\.ExpressionStatementInSwitchStatement;
import\s*None\.FoldReturnExpression;
import\s*None\.GeneratedDefault;
import\s*None\.IDEA278872;
import\s*None\.InvalidRename;
import\s*None\.LocalAssignmentDuplicates;
import\s*test\.NormalizedOnSwitchRule;
import\s*None\.OverlappingRanges;
import\s*None\.ParameterGrouping;
import\s*None\.RefactoringListener;
import\s*None\.RenamedExactDuplicate;
import\s*None\.RenamedParametrizedDuplicate;
import\s*None\.RuntimeCatchMayChangeSemantic1;
import\s*None\.RuntimeCatchMayChangeSemantic2;
import\s*None\.RuntimeCatchWithLastAssignment;
import\s*None\.ShortenClassReferences;
import\s*None\.SpecificCatch;
import\s*None\.Statement;
import\s*None\.StaticMustBePlaced;
import\s*None\.TemplateRenamesInsertedCallOnly;
import\s*None\.ThreeDuplicates;
import\s*None\.ValidRename;
import\s*None\.VariableGetterSuggested;
import\s*None\.WrongLocalAssignmentDuplicates;
import\s*None\.YieldWithDuplicate;
import\s*None\.ConditionalExitPoint;
import\s*None\.ConflictRename;
import\s*None\.ConflictedNamesFiltered;
import\s*None\.ExactDuplicates;
import\s*None\.GeneratedDefault;
import\s*None\.InvalidRename;
import\s*None\.ParameterGrouping;
import\s*None\.RefactoringListener;
import\s*None\.RenamedExactDuplicate;
import\s*None\.RenamedParametrizedDuplicate;
import\s*None\.RuntimeCatchMayChangeSemantic1;
import\s*None\.RuntimeCatchMayChangeSemantic2;
import\s*None\.RuntimeCatchWithLastAssignment;
import\s*None\.ShortenClassReferences;
import\s*None\.SpecificCatch;
import\s*None\.Statement;
import\s*None\.StaticMustBePlaced;
import\s*None\.ThreeDuplicates;
import\s*None\.ValidRename;
import\s*None\.VariableGetterSuggested;
import\s*None\.AnonInner;
import\s*None\.ArgumentFoldingMethodCall;
import\s*None\.ArgumentFoldingWholeStatement;
import\s*None\.ArgumentFoldingWholeStatementForUpdate;
import\s*None\.ArgumentFoldingWholeStatementForUpdateList;
import\s*None\.ArrayAccess;
import\s*None\.ArrayAccess1;
import\s*None\.ArrayAccessWithDuplicates;
import\s*None\.ArrayAccessWithLocalIndex;
import\s*None\.ArrayAccessWithTopExpression;
import\s*None\.ArrayReturnType;
import\s*None\.AvoidContinueInsideMethod;
import\s*None\.AvoidGenericArgumentCast;
import\s*None\.AvoidGenericArgumentCastLocalClass;
import\s*None\.BeforeCommentAfterSelectedFragment;
import\s*None\.BooleanExpression;
import\s*None\.BoxedConditionalReturn;
import\s*None\.BuilderChainWith2DimArrayAccess;
import\s*None\.BuilderChainWithArrayAccess;
import\s*None\.BuilderChainWithArrayAccessExpr;
import\s*None\.BuilderChainWithArrayAccessIf;
import\s*None\.CallChainExpression;
import\s*None\.CallOn2DimArrayElement;
import\s*None\.CallOnArrayElement;
import\s*None\.CallOnFieldArrayElement;
import\s*None\.CantMakeStatic;
import\s*None\.CantPassFieldAsParameter;
import\s*None\.Cast4ParamGeneration;
import\s*None\.CastWhenDuplicateReplacement;
import\s*None\.ChainedConstructor;
import\s*None\.ChainedConstructorDuplicates;
import\s*None\.ChainedConstructorInvalidDuplicates;
import\s*None\.ChangedReturnType;
import\s*None\.CheckQualifierMapping;
import\s*None\.ClassReference;
import\s*None\.ClassReference2;
import\s*None\.CodeDuplicates;
import\s*None\.CodeDuplicates2;
import\s*None\.CodeDuplicates3;
import\s*None\.CodeDuplicates4;
import\s*None\.CodeDuplicates5;
import\s*None\.CodeDuplicatesVarargsShouldNotChangeReturnType;
import\s*None\.CodeDuplicatesWithComments;
import\s*None\.CodeDuplicatesWithContinue;
import\s*None\.CodeDuplicatesWithContinueNoReturn;
import\s*None\.CodeDuplicatesWithEmptyStatementsBlocksParentheses;
import\s*None\.CodeDuplicatesWithMultExitPoints;
import\s*None\.CodeDuplicatesWithOutputValue;
import\s*None\.CodeDuplicatesWithOutputValue1;
import\s*None\.CodeDuplicatesWithReturn;
import\s*None\.CodeDuplicatesWithReturn2;
import\s*None\.CodeDuplicatesWithReturnInAnonymous;
import\s*None\.CodeDuplicatesWithStaticInitializer;
import\s*None\.ComplexTypeParams;
import\s*None\.ConditionalExitCombinedWithNullabilityShouldPreserveVarsUsedInExitStatements;
import\s*None\.ConditionalReturnInDuplicate;
import\s*None\.ConditionalReturnVsAssignDuplicate;
import\s*None\.ConditionalWithTwoParameters;
import\s*None\.ConflictingAnonymous;
import\s*None\.ConstantConditionsAffectingControlFlow;
import\s*None\.ConstantConditionsAffectingControlFlow1;
import\s*None\.ContinueInside;
import\s*None\.CopyParamAnnotations;
import\s*None\.DecrementDifferentChainedFieldsDuplicate;
import\s*None\.DecrementDifferentFieldsDuplicate;
import\s*None\.DecrementDifferentInnerFieldsDuplicate;
import\s*None\.DecrementDifferentOuterFieldsDuplicate;
import\s*None\.DecrementDifferentStaticFieldsDuplicate;
import\s*None\.DefaultNamesConflictResolution;
import\s*None\.DifferentAnnotations;
import\s*None\.DisabledParam;
import\s*None\.DisjunctionType;
import\s*None\.DontExtractCustomFinalObjects;
import\s*None\.DontExtractFieldWithConstructor;
import\s*None\.DontExtractInsideSwitch;
import\s*None\.DontExtractLocalConstant;
import\s*None\.DontExtractUnfoldableVariable;
import\s*None\.DontMakeParametersFinalDueToUsagesInsideAnonymous;
import\s*None\.DontMissReturn;
import\s*None\.DontMissReturnDueToThrowable;
import\s*None\.DontReplaceThrowWithReturn;
import\s*None\.DontSkipVariablesUsedInLeftSideOfAssignments;
import\s*None\.DuplicateInUnreachableCode;
import\s*None\.DuplicatePreserveComments;
import\s*None\.DuplicateSubexpression;
import\s*None\.DuplicateSubexpressionWithParentheses;
import\s*None\.DuplicatesFromAnonymous;
import\s*None\.DuplicatesFullyQualifiedType;
import\s*None\.EffectivelyLocalVariables;
import\s*None\.EffectivelyLocalWithinExpression;
import\s*None\.EmptyBlockStatement;
import\s*None\.EmptyParenthesis;
import\s*None\.ExactDuplicateDeclaredReusedVariable;
import\s*None\.ExactDuplicateTwoDeclaredReusedVariables;
import\s*None\.ExitPoints1;
import\s*None\.ExitPoints10;
import\s*None\.ExitPoints11;
import\s*None\.ExitPoints2;
import\s*None\.ExitPoints3;
import\s*None\.ExitPoints4;
import\s*None\.ExitPoints4Nullable;
import\s*None\.ExitPoints5;
import\s*None\.ExitPoints6;
import\s*None\.ExitPoints7;
import\s*None\.ExitPoints8;
import\s*None\.ExitPoints9;
import\s*None\.ExitPointsInsideLoop;
import\s*None\.Expression;
import\s*None\.ExpressionDuplicates;
import\s*None\.ExtractAssignmentExpression;
import\s*None\.ExtractAssignmentExpressionFromStatement;
import\s*None\.ExtractBareDoWhileBody;
import\s*None\.ExtractBareElseBranch;
import\s*None\.ExtractBareForBody;
import\s*None\.ExtractBareThenBranch;
import\s*None\.ExtractBracedDoWhileBody;
import\s*None\.ExtractBracedElseBranch;
import\s*None\.ExtractBranchedPrimitive;
import\s*None\.ExtractConditionFromSimpleIf;
import\s*None\.ExtractConditionFromSimpleIf1;
import\s*None\.ExtractConditionalBreak;
import\s*None\.ExtractConditionalContinue;
import\s*None\.ExtractConstantExpressions;
import\s*None\.ExtractFromAnnotation;
import\s*None\.ExtractFromAnnotation1;
import\s*None\.ExtractFromAnonymous;
import\s*None\.ExtractFromCodeBlock;
import\s*None\.ExtractFromFinally;
import\s*None\.ExtractFromTryFinally;
import\s*None\.ExtractFromTryFinally2;
import\s*None\.ExtractSingleLabelFromSwitch;
import\s*None\.ExtractSwitchNotNullVariable;
import\s*None\.ExtractSwitchVariable;
import\s*None\.ExtractUnresolvedLambdaExpression;
import\s*None\.ExtractUnresolvedLambdaParameter;
import\s*None\.ExtractVariableAndReturn;
import\s*None\.ExtractVariableAndReturn1;
import\s*None\.ExtractVariableAndReturn2;
import\s*None\.ExtractVariableAndReturn3;
import\s*None\.ExtractWithLeadingComment;
import\s*None\.ExtractedVariableReused;
import\s*None\.FieldGroupAnchor;
import\s*None\.FieldGroupAnchor2;
import\s*org\.jetbrains\.annotations\.FilterAnnotations;
import\s*None\.FinalOutputVar;
import\s*None\.FinalParamUsedInsideAnon;
import\s*None\.FinalParams4LocalClasses;
import\s*None\.Finally;
import\s*None\.FoldInWhile;
import\s*None\.FoldedParamNameSuggestion;
import\s*None\.FoldedWithConflictedNames;
import\s*None\.FoldedWithNestedExpressions;
import\s*None\.FoldingWithFieldInvolved;
import\s*None\.FoldingWithFunctionCall;
import\s*None\.ForEach;
import\s*None\.ForceBraces;
import\s*None\.FromDefaultMethodInInterface;
import\s*None\.FromLambdaBody;
import\s*None\.FromLambdaBody1;
import\s*None\.FromLambdaBodyCapturedWildcardParams;
import\s*None\.FromLambdaBodyToAnonymous;
import\s*None\.FromLambdaBodyToToplevelInsideCodeBlock;
import\s*None\.FromLambdaBodyWithReturn;
import\s*None\.FromPrivateMethodInInterface;
import\s*None\.FromStaticMethodInInterface;
import\s*None\.GenericsParameters;
import\s*None\.GuardMethodDuplicates;
import\s*None\.GuardMethodDuplicates1;
import\s*None\.IDEADEV11036;
import\s*None\.IDEADEV11748;
import\s*None\.IDEADEV11848;
import\s*None\.IDEADEV33368;
import\s*None\.IdeaDev2291;
import\s*None\.IgnoreSwitchBreak;
import\s*None\.IncompleteExpression;
import\s*None\.InferredNotNull;
import\s*None\.InferredNotNullInReturnStatement;
import\s*None\.InferredNotNullInReturnStatementDuplicate;
import\s*None\.InferredReturnType1;
import\s*None\.InferredReturnType2;
import\s*None\.InferredReturnType3;
import\s*None\.InferredReturnType4;
import\s*None\.InferredReturnType5;
import\s*None\.InferredReturnType6;
import\s*None\.InlineCreated2ReturnLocalVariablesOnly;
import\s*None\.InsideCommentAfterSelectedFragment;
import\s*None\.InstanceMethodDuplicatesInStaticContext;
import\s*None\.InterfaceMethodVisibility;
import\s*None\.InvalidReference;
import\s*None\.KeepDeclarationWithAnnotations;
import\s*None\.LValueNotDuplicate;
import\s*None\.LeaveCommentsWhenExpressionExtracted;
import\s*None\.LesyaBug;
import\s*None\.LocalClass;
import\s*None\.LocalClassDefinedInMethodWhichIsUsedLater;
import\s*None\.LocalClassScope;
import\s*None\.LocalClassUsage;
import\s*None\.LocalVariableAnnotationsOrder;
import\s*None\.LocalVariableModifierList;
import\s*None\.LocalVariablesAreNotExposed;
import\s*None\.MakeVoidMethodReturnVariable;
import\s*None\.Method2Interface;
import\s*None\.Method2InterfaceFromConstant;
import\s*None\.Method2InterfaceFromStatic;
import\s*None\.MethodAnnotations;
import\s*None\.MultipleVarsInMethodNoReturnStatementAndAssignment;
import\s*None\.NearComment;
import\s*None\.NestedReference;
import\s*None\.NoExpressionFormatting1;
import\s*None\.NoExpressionFormatting2;
import\s*extractMethod\.NoNPE1;
import\s*None\.NoNPE2;
import\s*None\.NoRedundantContinue;
import\s*None\.NoReturnTypesSuggested;
import\s*None\.NoShortCircuit;
import\s*None\.NoStaticForInnerClass;
import\s*None\.NonFinalWritableParam;
import\s*None\.NonFoldInIfBody;
import\s*None\.NonPhysicalAssumptions;
import\s*None\.NonPhysicalSubexpression;
import\s*None\.NormalExitIf;
import\s*None\.NormalExitTry;
import\s*None\.NotInitializedInsideFinally;
import\s*None\.NotNullArgument0;
import\s*None\.NotNullArgument1;
import\s*None\.NotNullArgument2;
import\s*None\.NotNullArgument3;
import\s*None\.NotNullArgument4;
import\s*None\.NotNullArgument5;
import\s*None\.NotNullArgument6;
import\s*None\.NotNullArgument7;
import\s*None\.NotNullArgumentAnonymousClassBare;
import\s*None\.NotNullArgumentAnonymousClassInIf;
import\s*None\.NotNullArgumentAnonymousClassInIfNoBlock;
import\s*None\.NotNullArgumentLambdaBare;
import\s*None\.NotNullArgumentLambdaInForInitializer;
import\s*None\.NotNullArgumentLambdaInIf;
import\s*None\.NotNullArgumentLambdaInIfInsideBody;
import\s*None\.NotNullArgumentLambdaInIfNoBlock;
import\s*None\.NotNullArgumentLambdaInWhileNoBlock;
import\s*None\.NotNullArgumentLambdaInsideBody;
import\s*None\.NotNullArgumentTooComplexCode;
import\s*None\.NotNullCheckNameConflicts;
import\s*None\.NotPassedStaticField;
import\s*None\.NotPassedStaticField2;
import\s*None\.NullabilityAnnotationOverridden;
import\s*None\.NullabilityIsTypeAnnotation;
import\s*None\.NullableCheck;
import\s*None\.NullableCheck1;
import\s*None\.NullableCheckBreak;
import\s*None\.NullableCheckBreakDuplicate;
import\s*None\.NullableCheckDontMissFinal;
import\s*None\.NullableCheckVoid;
import\s*None\.NullableCheckVoidDuplicate;
import\s*None\.OneBranchAssignment;
import\s*None\.OneLineLambda;
import\s*None\.OneVariableExpression;
import\s*None\.OutputVariableDuplicate;
import\s*None\.OverlappingDuplicate;
import\s*None\.OverloadedMethods;
import\s*None\.OxfordBug;
import\s*None\.ParamDetection;
import\s*None\.ParameterFormatting;
import\s*None\.ParametersFromAnonymous;
import\s*None\.ParametrizedDuplicateDeclaredOutputVariable;
import\s*None\.ParametrizedDuplicateDeclaredReusedVariable;
import\s*None\.ParametrizedDuplicateExactlyRepeatedArguments;
import\s*None\.ParametrizedDuplicateExpression;
import\s*None\.ParametrizedDuplicateFoldArrayElement;
import\s*None\.ParametrizedDuplicateFoldArrayElementTwoUsages;
import\s*None\.ParametrizedDuplicateFoldListElement;
import\s*None\.ParametrizedDuplicateKeepSignature;
import\s*None\.ParametrizedDuplicateNestedSubexpression;
import\s*None\.ParametrizedDuplicateRepeatedArguments;
import\s*None\.ParametrizedDuplicateTripleRepeatedArguments;
import\s*None\.ParametrizedDuplicateUnfoldArrayArgument;
import\s*None\.ParametrizedMultiDuplicatesFoldArrayElement;
import\s*None\.ParamsUsedInLocalClass;
import\s*None\.PassFieldAsParameterAndMakeStatic;
import\s*None\.PatternVariable;
import\s*None\.PatternVariableIntroduced;
import\s*None\.PatternVariableIntroduced2;
import\s*None\.PatternVariableIntroduced3;
import\s*None\.QualifyWhenConflictingNamePresent;
import\s*None\.ReassignFinalFieldInside;
import\s*None\.ReassignedVarAfterCall;
import\s*None\.RecursiveCallToExtracted;
import\s*None\.RedundantCast;
import\s*None\.RejectParametrizedDuplicate;
import\s*None\.ReturnFromTry;
import\s*None\.ReturnVariablesResolved;
import\s*None\.SCR12245;
import\s*None\.SCR15815;
import\s*extractMethod\.SCR27887;
import\s*None\.SCR28427;
import\s*None\.SCR32924;
import\s*None\.SameAnnotations;
import\s*None\.Scr10464;
import\s*None\.Scr6241;
import\s*None\.Scr7091;
import\s*None\.Scr9852;
import\s*None\.ShortCircuit;
import\s*None\.ShortenClassRefsInNewReturnType;
import\s*None\.SimpleArrayAccess;
import\s*None\.SimpleMethodsInOneLine;
import\s*None\.SingleExitPOintWithTryFinally;
import\s*None\.SkipComments;
import\s*None\.SkipCustomAnnotations;
import\s*None\.SkipThrowsDeclaredInLambda;
import\s*None\.StaticForNestedClass;
import\s*None\.StaticForOuterClass;
import\s*None\.StaticImport;
import\s*None\.StopFolding;
import\s*None\.StopFoldingForArrayWriteAccessInConsequentUsages;
import\s*None\.StopFoldingPostfixInside;
import\s*None\.SuggestChangeSignatureCallToSameClassMethod;
import\s*None\.SuggestChangeSignatureEqualConstExprFolding;
import\s*None\.SuggestChangeSignatureFourOccurrencesTwoLiteralFolding;
import\s*None\.SuggestChangeSignatureFourOccurrencesTwoVariableFolding;
import\s*None\.SuggestChangeSignatureInitialParameterUnused;
import\s*None\.SuggestChangeSignatureLeaveSameExpressionsUntouched;
import\s*None\.SuggestChangeSignatureLongConstExprFolding;
import\s*None\.SuggestChangeSignatureOneParam;
import\s*None\.SuggestChangeSignatureOneParamMultipleTimesInside;
import\s*None\.SuggestChangeSignaturePlusOneFolding;
import\s*None\.SuggestChangeSignatureSameParamNames;
import\s*None\.SuggestChangeSignatureSameSubexpression;
import\s*None\.SuggestChangeSignatureSameSubexpressionWholeLine;
import\s*None\.SuggestChangeSignatureThreeOccurrencesTwoLiteralFolding;
import\s*None\.SuggestChangeSignatureThreeOccurrencesTwoVariableFolding;
import\s*None\.SuggestChangeSignatureTrivialMethod;
import\s*None\.SuggestChangeSignatureTwoFieldInitializers;
import\s*None\.SuggestChangeSignatureVoidCallFolding;
import\s*None\.SuggestChangeSignatureWithArrayFolding;
import\s*None\.SuggestChangeSignatureWithChangedParameterName;
import\s*None\.SuggestChangeSignatureWithFolding;
import\s*None\.SuggestChangeSignatureWithGetterFolding;
import\s*None\.SuggestChangeSignatureWithMultiFolding;
import\s*None\.SuggestChangeSignatureWithOutputVariables;
import\s*None\.SuggestChangeSignatureWithTwoWayFolding;
import\s*None\.TargetAnonymous;
import\s*None\.TheOnlyParenthesisExpressionWhichIsSkippedInControlFlow;
import\s*None\.ThisCall;
import\s*None\.TripleParametrizedDuplicate;
import\s*None\.TryFinally;
import\s*extractMethod\.TryFinallyInsideFor;
import\s*None\.TwoFromThreeEqStatements;
import\s*None\.TypeParamsList;
import\s*None\.TypeParamsListWithRecursiveDependencies;
import\s*None\.UnusedGenerics;
import\s*None\.UnusedInitializedVar;
import\s*None\.UseParamInCatch;
import\s*None\.UseParamInFinally;
import\s*None\.UseVarAfterCatch;
import\s*None\.UseVarAfterTry;
import\s*None\.UseVarInCatch1;
import\s*None\.UseVarInCatch2;
import\s*None\.UseVarInCatchInvisible;
import\s*None\.UseVarInCatchNested1;
import\s*None\.UseVarInCatchNested2;
import\s*None\.UseVarInFinally1;
import\s*None\.UseVarInFinally2;
import\s*None\.UseVarInOtherCatch;
import\s*session\.toString()\.VarDeclAfterExpressionExtraction;
import\s*None\.VariableInLoopWithConditionalBreak;
import\s*None\.VerboseArrayAccess;
import\s*None\.WriteArrayAccess;
import\s*None\.WriteDifferentFieldsDuplicate;
import\s*None\.AssignReturnValueToForeachParameter;
import\s*None\.BatchUpdateCausedByFormatter;
import\s*None\.ConditionalExit;
import\s*None\.ConditionalExitWithoutCodeBlock;
import\s*None\.ExtractFromAnonymous;
import\s*None\.ExtractFromIfStatementInsideAnonymous;
import\s*None\.ExtractedAssignmentExpression;
import\s*None\.ExtractedIncExpression;
import\s*None\.FormattingInside;
import\s*None\.FromStaticContext;
import\s*None\.InputOutput;
import\s*None\.MultilineDeclarations;
import\s*None\.MultilineDeclarationsWithReturn;
import\s*None\.NonCanonicalNaming;
import\s*None\.OutputVariable;
import\s*None\.OutputVariablesUsedInLoop1;
import\s*None\.OutputVariablesUsedInLoop2;
import\s*None\.OutputVarsReferences;
import\s*None\.RenameInInitializer;
import\s*None\.ReturnExitStatement;
import\s*None\.SameFieldsWithPrefix;
import\s*None\.StaticInner;
import\s*None\.UniqueObjectName;
import\s*None\.WithInnerClasses;
import\s*None\.allLValues;
import\s*None\.duplicateInsideLiteral;
import\s*None\.fromSelection;
import\s*None\.heavilyBrokenFile12;
import\s*None\.heavilyBrokenFile2;
import\s*None\.nullTypeAddCast;
import\s*None\.placeInsideLambdaBody1;
import\s*None\.subExpression;
import\s*None\.whilePolyadicWholeCondition;
import\s*None\.whilePolyadicWholeConditionParens;
import\s*None\.AnnotationDescription;
import\s*None\.AnonymousClassWithThrownClause;
import\s*None\.ArrayFromVarargs;
import\s*None\.ContainingClass;
import\s*None\.EscalateVisibility;
import\s*None\.ForwardReferences;
import\s*None\.FromEnumConstantInitializer2;
import\s*None\.IntroduceConstantFromThisCall;
import\s*None\.PartialStringLiteral;
import\s*None\.PartialStringLiteralAnchor;
import\s*None\.PartialStringLiteralAnchorFromAnnotation;
import\s*None\.PartialStringLiteralConvertibleToInt;
import\s*None\.PartialStringLiteralQualified;
import\s*None\.StringLiteralConvertibleToInt;
import\s*None\.WithMethodReferenceBySecondSearch;
import\s*None\.before1;
import\s*None\.beforeAcceptIntroduceFieldFromExprInThisCall;
import\s*None\.beforeConflictingFieldInContainingClass;
import\s*None\.beforeConflictingFieldInContainingClassLocal;
import\s*None\.beforeElseClause;
import\s*None\.beforeForcedFieldType;
import\s*None\.beforeFromLambdaExpr;
import\s*None\.beforeOnClassLevelClassForName;
import\s*None\.beforeOnClassLevelNewExpression;
import\s*None\.beforeOuterClass;
import\s*None\.beforeRejectIntroduceFieldFromExprInThisCall;
import\s*None\.beforeSimplifiedDiamond;
import\s*None\.beforeEnsureNotFolded;
import\s*None\.beforeExceptionPreventFromCompatibility;
import\s*None\.beforeFunction;
import\s*None\.beforeInsideAnonymous;
import\s*None\.beforeInsideForLoop;
import\s*None\.beforeIntConsumer;
import\s*None\.beforeIntConsumerFromIfStatement;
import\s*None\.beforeIntPredicateConditionalExit;
import\s*None\.beforePartialString;
import\s*None\.beforeSampleRunnable;
import\s*None\.beforeThrownExceptionsAgree;
import\s*None\.beforeUsedParametersOutsideSelectedFragment;
import\s*None\.beforeChangeContextBeforePuttingIntoAnonymous;
import\s*None\.beforeExpressionInLoopNoVars;
import\s*None\.beforeExpressionNoVarsSelected;
import\s*None\.beforeFieldFromSuperClassPreserveContext;
import\s*None\.beforeIgnoreMethodObjectSuggestion;
import\s*None\.beforeNoSuggestionForInaccessibleInterface;
import\s*None\.beforePassFieldsAsParameters;
import\s*None\.beforePostfixExpressionUnusedAfterAssignment;
import\s*None\.beforeRunnableFromComment;
import\s*None\.beforeSkipUsedLocals;
import\s*None\.beforeStatementInLoop;
import\s*None\.beforeStatements;
import\s*None\.beforeAnonymousClass;
import\s*None\.beforeArrayInitializer;
import\s*None\.beforeBareRefToVararg;
import\s*None\.beforeCanonicalConstructor;
import\s*None\.beforeCodeDuplicates;
import\s*None\.beforeCollapseToLambda;
import\s*None\.beforeConflictingField;
import\s*None\.beforeDelegateWithVarargs;
import\s*None\.beforeDiamond2Raw;
import\s*None\.beforeDiamondOccurrences;
import\s*None\.beforeEnclosingWithParamDeletion;
import\s*None\.beforeEnums;
import\s*None\.beforeExpandMethodReference;
import\s*None\.beforeExpectedType;
import\s*None\.beforeFieldAccess;
import\s*None\.beforeFieldWithGetterReplacement;
import\s*None\.beforeFieldWithInaccessibleGetterReplacement;
import\s*None\.beforeGenerateDelegate;
import\s*None\.beforeGenerateDelegateInSuperClass;
import\s*None\.beforeGenerateDelegateInSuperInterface;
import\s*None\.beforeGenerateDelegateNoArgs;
import\s*None\.beforeGenerateDelegateRemoveParameter;
import\s*None\.beforeGetterQualifier;
import\s*None\.beforeImplicitDefaultConstructor;
import\s*None\.beforeImplicitSuperCall;
import\s*None\.beforeIncompleteEnumDefinition;
import\s*None\.beforeIncompleteVararg;
import\s*None\.beforeIncorrectScope;
import\s*None\.beforeInternalSideEffect;
import\s*None\.beforeLocalVarDeclaration;
import\s*None\.beforeLocalVarSelection;
import\s*None\.beforeMethodAccess;
import\s*None\.beforeMethodCallRefToVararg;
import\s*None\.beforeMethodUsageInThisMethodInheritor;
import\s*None\.beforeMethodWithoutParams;
import\s*None\.beforeNewWithRefToVararg;
import\s*None\.beforeNoUsages;
import\s*None\.beforeNull;
import\s*None\.beforeParameterJavaDoc1;
import\s*None\.beforeParameterJavaDoc2;
import\s*None\.beforeParameterJavaDoc3;
import\s*None\.beforeParameterJavaDocBeforeVararg;
import\s*None\.beforeParameterSubstitution;
import\s*None\.beforePreserveDiamondOccurrences;
import\s*None\.beforeQualifiedNew;
import\s*None\.beforeRecordGetterImpl;
import\s*None\.beforeRemoveOverrideFromDelegated;
import\s*None\.beforeRemoveParameter;
import\s*None\.beforeRemoveParameterAfterVariable;
import\s*None\.beforeRemoveParameterInHierarchy;
import\s*None\.beforeRemoveParameterInHierarchy1;
import\s*None\.beforeRemoveParameterWithJavadoc;
import\s*None\.beforeReplaceAllAndDeleteUnused;
import\s*None\.beforeSelfReference;
import\s*None\.beforeSelfReferenceVarargs;
import\s*None\.beforeSelfReferenceVarargs1;
import\s*None\.beforeSimpleUsage;
import\s*None\.beforeSimplifiedResultedType;
import\s*None\.beforeStaticFieldAccess;
import\s*None\.beforeStaticFieldWithGetterReplacement;
import\s*None\.beforeSubstituteTypeParams;
import\s*None\.beforeSubstituteTypeParamsInInheritor;
import\s*None\.beforeSuperInExpression;
import\s*None\.beforeSuperWithSideEffect;
import\s*None\.beforeThisSubstitution;
import\s*None\.beforeThisSubstitutionInQualifier;
import\s*None\.beforeVarargs;
import\s*None\.beforeVarargs1;
import\s*None\.beforeWeirdQualifier;
import\s*None\.beforeWeirdQualifierAndParameter;
import\s*None\.beforeWrapVarargsParameter;
import\s*None\.AllButWriteNoRead;
import\s*None\.AndAndSubexpression;
import\s*None\.AnonymousClass1;
import\s*None\.AnonymousClass2;
import\s*None\.AnonymousClass3;
import\s*None\.AnonymousClass4;
import\s*None\.AnonymousClass5;
import\s*None\.AnonymousClass6;
import\s*None\.AnonymousClass7;
import\s*None\.ArrayFromVarargs;
import\s*None\.ArrayFromVarargs1;
import\s*None\.ArrayOfCapturedWildcardUpperBoundSuggestedAsType;
import\s*None\.AssignTernary;
import\s*None\.CapturedWildcardUpperBoundSuggestedAsType;
import\s*None\.CaseLabel;
import\s*None\.CaseLabelEnum;
import\s*None\.CaseLabelRuleExpression;
import\s*None\.CaseLabelRuleSingle;
import\s*None\.CaseLabelSingle;
import\s*None\.ChooseIntersectionConjunctBasedOnFollowingCalls;
import\s*None\.ChooseTypeExpressionWhenNotDenotable;
import\s*None\.ChooseTypeExpressionWhenNotDenotable1;
import\s*None\.ClassSelectionInStaticMethodCall;
import\s*None\.ConflictingField;
import\s*None\.ConflictingFieldInExpression;
import\s*None\.ConflictingFieldInOuterClass;
import\s*None\.DeclareTernary;
import\s*None\.DenotableType1;
import\s*None\.DenotableType2;
import\s*None\.DenotableType3;
import\s*None\.DifferentForeachParameters;
import\s*None\.DistinguishLambdaParams;
import\s*None\.DuplicateGenericExpressions;
import\s*None\.DuplicatesAnonymousClassCreationWithSimilarParameters;
import\s*None\.EnsureCodeBlockAroundBreakStatement;
import\s*None\.EnsureCodeBlockForThrows;
import\s*None\.EnumArrayFromVarargs;
import\s*None\.ExpectedType8Inference;
import\s*None\.Field;
import\s*None\.FieldAll;
import\s*None\.FieldFromLambda;
import\s*None\.FieldInitializer;
import\s*None\.FieldInitializerDenormalized;
import\s*None\.FromFinalFieldOnAssignment;
import\s*None\.FromForInitializer;
import\s*None\.FromSwitchStatement;
import\s*None\.FunctionalExpressionInSwitch;
import\s*None\.IDEADEV13369;
import\s*None\.IDEADEV3678;
import\s*None\.IfConditionAndChain;
import\s*None\.IncompatibleTypesForSelectionSubExpression;
import\s*None\.IncorrectExpressionSelected;
import\s*None\.InsideElse;
import\s*None\.InsideFor;
import\s*None\.InsideForLoop;
import\s*None\.InsideForLoopIndependentFromLoopVariable;
import\s*None\.InsideIf;
import\s*None\.InsideWhile;
import\s*None\.IntersectionWildcardExpectedType;
import\s*None\.InvalidPostfixExpr;
import\s*None\.KeepComments;
import\s*None\.Lambda;
import\s*None\.LambdaAndChain;
import\s*None\.LambdaExpr;
import\s*None\.LambdaExprNotAccepted;
import\s*None\.LambdaNotInContext;
import\s*None\.MethodCall;
import\s*None\.MethodCallInSwitch;
import\s*None\.MethodRef;
import\s*None\.MethodRefNotInContext;
import\s*None\.MethodRefNotInContextInferred;
import\s*None\.MethodRefNotInContextInferredFilterWithNonAcceptableSince;
import\s*None\.MethodRefNotInContextInferredNonExact;
import\s*None\.NameSuggestion;
import\s*None\.NestedAndOrParentheses;
import\s*None\.NoArrayFromVarargs;
import\s*None\.NoArrayFromVarargs1;
import\s*None\.NoArrayFromVarargsUntilComma;
import\s*None\.NonConflictingField;
import\s*None\.NonExpression;
import\s*None\.NonExpressionPriorityFailure;
import\s*None\.NonExpressionPriorityFailure;
import\s*None\.NonPatternDeclarationJava16;
import\s*None\.NonPatternVariableDeclarationTwoBlocksJava16;
import\s*None\.NormalizeDeclarations;
import\s*org\.eclipse\.jdt\.annotation\.NullabilityAnnotationConflict;
import\s*org\.eclipse\.jdt\.annotation\.NullabilityAnnotationNoConflict;
import\s*None\.OneLineLambdaValueCompatible;
import\s*None\.OneLineLambdaVoidCompatible;
import\s*None\.Parenthesized;
import\s*None\.ParenthesizedOccurrence1;
import\s*None\.ParenthesizedOccurrence2;
import\s*None\.PatternVariableDeclarationAfterIfJava16;
import\s*None\.PatternVariableDeclarationJava16;
import\s*None\.PatternVariableDeclarationUpcastJava16;
import\s*None\.PatternVariableDeclarationUsedInLocalJava16;
import\s*None\.PatternVariableNotUsedAfterwards;
import\s*None\.PatternVariableUsedAfterwards;
import\s*None\.Polyadic;
import\s*None\.PutInLambdaBody;
import\s*None\.PutInLambdaBodyMultipleOccurrences;
import\s*None\.PutInLambdaBodyVoid;
import\s*None\.PutInLambdaBodyVoidValueConflict;
import\s*None\.PutInNestedLambdaBody;
import\s*None\.PutOuterLambda;
import\s*None\.ReplaceAll;
import\s*None\.ReturnAndChain;
import\s*None\.ReturnNonExportedArray;
import\s*None\.ReturnOrAndChain;
import\s*None\.ReturnOrChain;
import\s*None\.ReturnTernary;
import\s*None\.SCR10412;
import\s*None\.SCR18295;
import\s*None\.SCR18295a;
import\s*None\.SCR22718;
import\s*None\.SCR26075;
import\s*None\.SCR26075For;
import\s*None\.SCR40281;
import\s*None\.Scr16910;
import\s*None\.SkipErroneousParen;
import\s*None\.SkipSemicolon;
import\s*None\.StaticConflictingField;
import\s*None\.StaticImport;
import\s*None\.SubExpressionFromMagicString;
import\s*None\.SubExpressionFromPrimitiveWithConversion;
import\s*None\.SubLiteral;
import\s*None\.SubLiteral1;
import\s*None\.SubLiteralFailure;
import\s*None\.SubLiteralFromExpression;
import\s*None\.SubPrimitiveLiteral;
import\s*None\.SubexpressionWithSpacesInSelection;
import\s*None\.SubexpressionWithSpacesInSelectionAndTailingComment;
import\s*None\.SubstringInSwitch;
import\s*None\.TernaryBothBranches;
import\s*None\.ThisQualifier;
import\s*None\.TooPopularNameOfTheFollowingCall;
import\s*None\.TypeAnnotations;
import\s*None\.TypesHierarchyBasedOnCalledMethod;
import\s*None\.VarTypeArrayExtractedJava10;
import\s*None\.VarTypeExtractedJava10;
import\s*None\.VarTypeLambdaTypeCast;
import\s*None\.WhileCondition;
import\s*None\.WhileCondition2;
import\s*None\.WhileConditionAndOr;
import\s*None\.WhileConditionIncomplete;
import\s*None\.WhileConditionNoBrace;
import\s*None\.WhileConditionPlusNormal;
import\s*None\.WhileConditionPlusNormal2;
import\s*p\.WithDefaultNullability;
import\s*None\.WithIfBranches;
import\s*None\.WriteUsages;
import\s*test\.Client;
import\s*test\.Client;
import\s*None\.Client;
import\s*None\.Client;
import\s*pack1\.A;
import\s*None\.IntroduceFunctionalVariableFromExpression;
import\s*None\.IntroduceFunctionalVariableFromStatement;
import\s*None\.ReplaceMethodWithMethodObjectIsFiltered;
import\s*None\.MethodChain;
import\s*None\.AssignmentWithConcatenation;
import\s*None\.AssignmentWithoutConcatenation;
import\s*None\.CastInside;
import\s*None\.CastNoCast;
import\s*None\.FromExpression;
import\s*None\.LtLtByte;
import\s*None\.LtLtInt;
import\s*None\.MultipleCasts;
import\s*None\.NoCastWhenWrapped;
import\s*None\.OutputUsedAsCharSequence;
import\s*None\.OutputUsedAsObject;
import\s*None\.OutputUsedInPostfixExpr;
import\s*None\.OutputUsedInReturn;
import\s*None\.PostfixExprUnusedAfter;
import\s*None\.PostfixExprUsedAsOutput;
import\s*com\.intellij\.codeInsight\.daemon\.impl\.DaemonRespondToChangesTest;
import\s*com\.intellij\.codeInsight\.hint\.JavaTypeProviderTest;
import\s*com\.intellij\.java\.codeInsight\.ExpressionTypeActionTest;
import\s*com\.intellij\.java\.codeInsight\.JoinLinesPerformanceTest;
import\s*com\.intellij\.java\.codeInsight\.editorActions\.JavaEditingTest;
import\s*com\.intellij\.java\.codeInsight\.editorActions\.MoveElementLeftRightTest;
import\s*com\.intellij\.java\.codeInsight\.generation\.surroundWith\.JavaSurroundWithTest;
import\s*com\.intellij\.java\.codeInspection\.DataFlowInspectionTestSuite;
import\s*com\.intellij\.java\.codeInspection\.DataFlowInspectionTrackerTest;
import\s*com\.intellij\.java\.execution\.actions\.ConfigurationFromEditorTest;
import\s*com\.intellij\.java\.find\.FindInEditorTest;
import\s*com\.intellij\.java\.psi\.formatter\.java\.JavaAutoIndentLinesTest;
import\s*com\.intellij\.openapi\.editor\.actions\.JavaEditorActionTest;
import\s*com\.intellij\.psi\.impl\.PsiModificationTrackerTest;
import\s*com\.intellij\.psi\.impl\.smartPointers\.SmartPsiElementPointersTest;
import\s*com\.intellij\.json\.JsonCopyPasteTest;
import\s*com\.intellij\.codeInsight\.generation\.SelfManagingCommenterUtil;
import\s*com\.intellij\.psi\.impl\.smartPointers\.MarkerCache;
import\s*com\.intellij\.openapi\.editor\.ex\.util\.LayeredLexerEditorHighlighter;
import\s*com\.intellij\.execution\.compound\.ConfigurationSelectionUtil;
import\s*com\.intellij\.ide\.macro\.MacrosDialog;
import\s*com\.intellij\.psi\.impl\.search\.LowLevelSearchUtil;
import\s*com\.intellij\.codeInsight\.daemon\.impl\.PsiElementListNavigator;
import\s*com\.intellij\.codeInsight\.editorActions\.ExtendWordSelectionHandlerBase;
import\s*com\.intellij\.codeInsight\.generation\.CommentByBlockCommentHandler;
import\s*com\.intellij\.codeInsight\.highlighting\.HighlightUsagesHandler;
import\s*com\.intellij\.codeInsight\.template\.impl\.InvokeTemplateAction;
import\s*com\.intellij\.execution\.services\.ServiceTreeView;
import\s*com\.intellij\.ide\.commander\.AbstractListBuilder;
import\s*com\.intellij\.lang\.folding\.CustomFoldingSurroundDescriptor;
import\s*com\.intellij\.psi\.search\.scope\.EditorSelectionLocalSearchScope;
import\s*None\.selection;
import\s*com\.intellij\.find\.FindInEditorFunctionalTest;
import\s*com\.intellij\.find\.FindInEditorMultiCaretTest;
import\s*com\.intellij\.openapi\.ui\.MasterDetailsComponent;
import\s*com\.intellij\.ui\.CheckboxTreeHelper;
import\s*com\.intellij\.ui\.components\.breadcrumbs\.Breadcrumbs;
import\s*com\.intellij\.ide\.gdpr\.ConsentOptions;
import\s*com\.intellij\.openapi\.editor\.impl\.FoldRegionsTree;
import\s*com\.intellij\.openapi\.editor\.impl\.ImmediatePainter;
import\s*com\.intellij\.openapi\.editor\.impl\.view\.EditorPainter;
import\s*com\.intellij\.openapi\.editor\.impl\.view\.IterationState;
import\s*com\.intellij\.openapi\.editor\.impl\.view\.LogicalPositionCache;
import\s*com\.intellij\.openapi\.options\.colors\.pages\.GeneralColorsPage;
import\s*None\.EditorCodeBlockEnd-before;
import\s*None\.EditorCodeBlockEndWithSelection-after;
import\s*None\.EditorCodeBlockEndWithSelection-before;
import\s*None\.EditorCodeBlockStart-before;
import\s*None\.EditorCodeBlockStartWithSelection-after;
import\s*None\.EditorCodeBlockStartWithSelection-before;
import\s*None\.BlockSelection;
import\s*None\.NormalSelection;
import\s*com\.intellij\.application\.options\.codeInsight\.editor\.quotes\.SelectionQuotingTypedHandlerTest;
import\s*com\.intellij\.codeInsight\.editorActions\.CustomFileTypeEditorTest;
import\s*com\.intellij\.openapi\.editor\.EditorMultiCaretColumnModeTest;
import\s*com\.intellij\.openapi\.editor\.EditorMultiCaretStateRestoreTest;
import\s*com\.intellij\.openapi\.editor\.EditorMultiCaretTest;
import\s*com\.intellij\.openapi\.editor\.EditorMultiCaretUndoRedoTest;
import\s*com\.intellij\.openapi\.editor\.EditorPaintingTest;
import\s*com\.intellij\.openapi\.editor\.actions\.AbstractRegionToKillRingTest;
import\s*com\.intellij\.openapi\.editor\.actions\.CopyActionTest;
import\s*com\.intellij\.openapi\.editor\.actions\.DeleteToLineStartAndEndActionsTest;
import\s*com\.intellij\.openapi\.editor\.actions\.EditorActionTest;
import\s*com\.intellij\.openapi\.editor\.actions\.EditorCloneCaretAboveBelowTest;
import\s*com\.intellij\.openapi\.editor\.actions\.ForwardBackwardParagraphActionTest;
import\s*com\.intellij\.openapi\.editor\.actions\.IndentSelectionActionTest;
import\s*com\.intellij\.openapi\.editor\.actions\.NextPrevWordTest;
import\s*com\.intellij\.openapi\.editor\.actions\.SelectLineActionTest;
import\s*com\.intellij\.openapi\.editor\.actions\.SelectSingleLineAtCaretActionTest;
import\s*com\.intellij\.openapi\.editor\.actions\.SelectUnselectOccurrenceActionsTest;
import\s*com\.intellij\.openapi\.editor\.actions\.ToggleColumnModeActionMultiCaretTest;
import\s*com\.intellij\.openapi\.editor\.impl\.EditorImplTest;
import\s*com\.intellij\.openapi\.editor\.impl\.LineSetIncrementalUpdateTest;
import\s*com\.intellij\.openapi\.editor\.richcopy\.SyntaxInfoConstructionTest;
import\s*com\.intellij\.structuralsearch\.plugin\.ui\.StructuralSearchTypedHandlerTest;
import\s*com\.intellij\.formatting\.FormatterTestUtils;
import\s*com\.intellij\.testFramework\.EditorTestUtil;
import\s*com\.intellij\.testFramework\.propertyBased\.StripTestDataMarkup;
import\s*com\.intellij\.openapi\.vcs\.changes\.committed\.CommittedChangesCache;
import\s*com\.intellij\.openapi\.vcs\.history\.FileHistoryPanelImpl;
import\s*com\.siyeh\.ig\.migration\.TryWithIdenticalCatchesInspection;
import\s*None\.Selection;
import\s*None\.Selection_after;
import\s*None\.Selection;
import\s*None\.Selection_after;
import\s*None\.ConflictingFieldMyClass;
import\s*None\.FieldAccessMyClass;
import\s*None\.FieldWithGetterReplacementMyClass;
import\s*None\.FieldWithInaccessibleGetterReplacementMyClass;
import\s*None\.ImplicitDefaultConstructorMyClass;
import\s*None\.ImplicitSuperCallMyClass;
import\s*None\.InternalSideEffectMyClass;
import\s*None\.IntroduceConstantFieldMyClass;
import\s*None\.MethodAccessMyClass;
import\s*None\.MethodUsageInThisMethodInheritorMyClass;
import\s*None\.MethodWithoutParamsMyClass;
import\s*None\.OverridedMethodWithRemoveUnusedParametersMyClass;
import\s*None\.ParameterSubstitutionMyClass;
import\s*None\.RemoveParameterInHierarchyMyClass;
import\s*None\.SimpleOverridedMethodMyClass;
import\s*None\.SimpleUsageMyClass;
import\s*None\.StaticFieldAccessMyClass;
import\s*None\.SuperInExpressionMyClass;
import\s*None\.SuperWithSideEffectMyClass;
import\s*None\.ThisSubstitutionMyClass;
import\s*None\.ThisSubstitutionInQualifierMyClass;
import\s*None\.VarargsMyClass;
import\s*None\.WeirdQualifierMyClass;
import\s*None\.WeirdQualifierAndParameterMyClass;
import\s*None\.MyClass1;
import\s*com\.intellij\.junit5\.JUnit5TestRunnerUtil;
import\s*org\.jetbrains\.kotlin\.idea\.core\.util\.CodeInsightUtils;
import\s*org\.jetbrains\.kotlin\.idea\.fir\.asJava\.classes\.FirClassLoadingTestGenerated;
import\s*org\.jetbrains\.kotlin\.asJava\.classes\.UltraLightClassLoadingTestGenerated;
import\s*org\.jetbrains\.kotlin\.idea\.caches\.resolve\.MultiplatformAnalysisTestGenerated;
import\s*org\.jetbrains\.kotlin\.idea\.quickfix\.QuickFixMultiFileTestGenerated;
import\s*org\.jetbrains\.kotlin\.idea\.quickfix\.QuickFixTestGenerated;
import\s*None\.AddImports;
import\s*None\.AddImportsButNoConversion;
import\s*None\.AddImportsButNoConversion2;
import\s*ppp\.AddImportsClassInSamePackage;
import\s*None\.AddImportsDummyConflict;
import\s*None\.AddImportsWithExplicitImports;
import\s*None\.AddKClassImport;
import\s*None\.Arithmetic;
import\s*None\.ClassWithNoDocComment;
import\s*javaPack\.ClassWithOverrides;
import\s*None\.Constructor;
import\s*None\.ConversionInCorrectContext;
import\s*None\.CopyAnnotation;
import\s*None\.ExtendsTypeRef;
import\s*None\.FieldWithNoEndComment;
import\s*None\.FieldWithNoModifierAndNoSemicolon;
import\s*helloWorld\.FileWithNoPackageStatement;
import\s*None\.HalfTheWhiteSpace;
import\s*None\.ImplementsTypeRef;
import\s*None\.Imports1;
import\s*None\.Imports2;
import\s*None\.Imports3;
import\s*None\.Indentation;
import\s*None\.InsertIntoComment;
import\s*None\.InsertIntoString;
import\s*None\.Kt31848;
import\s*None\.MethodDeclarationWithNoBody;
import\s*None\.MethodReferenceWithoutQualifier;
import\s*None\.MethodWithNoAnnotation;
import\s*None\.MethodWithOnlyOneAnnotation;
import\s*None\.OnlyClosingBrace;
import\s*None\.OnlyOneBraceFromBlock;
import\s*None\.OnlyQualifier;
import\s*None\.RawTypeRef;
import\s*None\.RedundantTypeCast;
import\s*None\.RedundantTypeCast2;
import\s*None\.SampleBlock;
import\s*None\.SeveralMethodsSample;
import\s*None\.SingleWordFromIdentifier;
import\s*None\.nullType;
import\s*None\.javaMethod;
import\s*None\.javaMethodOverridingKotlinFunctionWithUsages;
import\s*None\.AddImports;
import\s*None\.AddImportsButNoConversion;
import\s*ppp\.AddImportsClassInSamePackage;
import\s*None\.AddImportsDummyConflict;
import\s*None\.AddImportsWithExplicitImports;
import\s*None\.AddKClassImport;
import\s*None\.Arithmetic;
import\s*None\.ClassWithNoDocComment;
import\s*javaPack\.ClassWithOverrides;
import\s*None\.Constructor;
import\s*None\.ConversionInCorrectContext;
import\s*None\.ConvertedMethodReference;
import\s*None\.CopyAnnotation;
import\s*None\.ExtendsTypeRef;
import\s*None\.FieldWithNoEndComment;
import\s*None\.FieldWithNoModifierAndNoSemicolon;
import\s*helloWorld\.FileWithNoPackageStatement;
import\s*None\.GetterWithError;
import\s*None\.HalfTheWhiteSpace;
import\s*None\.ImplementsTypeRef;
import\s*None\.Imports1;
import\s*None\.Imports2;
import\s*None\.Imports3;
import\s*None\.Indentation;
import\s*None\.InsertIntoComment;
import\s*None\.InsertIntoString;
import\s*None\.MethodDeclarationWithNoBody;
import\s*None\.MethodReferenceWithoutQualifier;
import\s*None\.MethodWithNoAnnotation;
import\s*None\.MethodWithOnlyOneAnnotation;
import\s*None\.OnlyClosingBrace;
import\s*None\.OnlyOneBraceFromBlock;
import\s*None\.OnlyQualifier;
import\s*None\.OpenPublicFunctionToTopLevel;
import\s*None\.PrivateFunctionToTopLevel;
import\s*None\.RawTypeRef;
import\s*None\.RedundantTypeCast;
import\s*None\.RedundantTypeCast2;
import\s*None\.SampleBlock;
import\s*None\.SeveralMethodsSample;
import\s*None\.SingleWordFromIdentifier;
import\s*None\.UnconvertedMethodReference;
import\s*None\.forThroughCollectionIndices;
import\s*None\.forThroughCollectionIndices;
import\s*org\.intellij\.plugins\.markdown\.ui\.actions\.styling\.ToggleCodeSpanAction;
import\s*org\.intellij\.plugins\.markdown\.braces\.MarkdownBraceMatcherTest;
import\s*org\.jetbrains\.idea\.maven\.importing\.SnapshotDependenciesImportingTest;
import\s*com\.intellij\.tasks\.mantis\.model\.MantisConnectBindingStub;
import\s*com\.intellij\.tasks\.integration\.AssemblaIntegrationTest;
import\s*org\.jetbrains\.plugins\.textmate\.language\.syntax\.selector\.TextMateSelectorLexer;
import\s*org\.jetbrains\.plugins\.textmate\.editor\.TextMateSnippetsCompletionTest;
import\s*com\.intellij\.designer\.designSurface\.CaptionPanel;
import\s*com\.intellij\.designer\.designSurface\.DesignerEditorPanel;
import\s*com\.intellij\.uiDesigner\.FormEditingUtil;
import\s*com\.intellij\.uiDesigner\.GridBuildUtil;
import\s*com\.intellij\.uiDesigner\.actions\.DuplicateComponentsAction;
import\s*com\.intellij\.uiDesigner\.actions\.UngroupButtonsAction;
import\s*com\.intellij\.uiDesigner\.componentTree\.ComponentTreeBuilder;
import\s*com\.intellij\.uiDesigner\.designSurface\.GridCaptionPanel;
import\s*com\.jetbrains\.python\.codeInsight\.editorActions\.moveUpDown\.PyStatementMover;
import\s*com\.jetbrains\.env\.debug\.PythonDebuggerTest;
import\s*com\.intellij\.util\.xml\.DomSimpleValuesTest;
import\s*com\.intellij\.codeInsight\.completion\.XmlSyncTagCommunityTest;
import\s*com\.intellij\.codeInsight\.completion\.XmlTypedHandlersTest;
import\s*com\.intellij\.codeInsight\.editorActions\.EscapeEntitiesActionTest;
import\s*com\.intellij\.editor\.XmlEditorTest;
import\s*com\.intellij\.debugger\.memory\.agent\.MemoryAgentKindReferringObject;
import\s*com\.intellij\.openapi\.options\.colors\.pages\.JavaColorSettingsPage;
import\s*cms\.si\.payment\.paymentManager;
import\s*cms\.si\.payment\.paymentManager_after;
import\s*com\.intellij\.psi\.impl\.source\.codeStyle\.lineIndent\.JavaLikeLangLineIndentProvider;
import\s*com\.intellij\.openapi\.options\.colors\.ColorSettingsPage;
import\s*com\.siyeh\.igtest\.resources\.HibernateResourceInspection;
import\s*org\.jetbrains\.plugins\.groovy\.lang\.parser\.GroovyGeneratedParser;
import\s*org\.jetbrains\.java\.decompiler\.modules\.decompiler\.exps\.NewExprent;
import\s*com\.theoryinpractice\.testng\.configuration\.TestNGForkTest;
import\s*com\.jetbrains\.python\.inspections\.unresolvedReference\.PyUnresolvedReferencesVisitor;
import\s*com\.jetbrains\.env\.debug\.PyUnitTestDebuggingTask;
import\s*com\.jetbrains\.env\.debug\.PythonUnitTestsDebuggingTest;
import\s*com\.intellij\.openapi\.options\.colors\.pages\.DefaultLanguageColorsPage;
import\s*None\.Annotation;
