# 1 - Ler o arquivo CSV
# 2 - Buscar pelos bancos nas descrições
# 3 - Criar um objeto do tipo
# 3.1 - Criar uma classe e uma tabela para isso. Campos: Name, Status, Description, References, Phase, Votes, Comments
# 4 - Salvar no banco linkando com o tipo do banco
# Falta fazer: validar se o item já foi add  ao banco antes de salvar.

from unicodedata import name
import pandas as pd
import database as db

from sqlalchemy.orm import load_only
from util import VULNERABILITY_FILE, HEURISTICS_DIR, green

def find_label_in_vulnerability(label, df):
    list_results = []
    for i, description in enumerate(df['Description']):
        if label.lower() in description.lower(): #a label pode se encontrada de outras formas, ignorar os cases
            list_results.append(df.loc[i])
    return list_results

def main():
    db.connect()

    print(f'Loading vulnerabilitys from {VULNERABILITY_FILE}.')
    df = pd.read_excel(VULNERABILITY_FILE, keep_default_na=False)
    print("leu o arquivo")
    
    print(f'\nLoading heuristics from {HEURISTICS_DIR}.')
    labels_db = db.query(db.Label).options(load_only('id', 'name', 'type')).filter(db.Label.type == 'database').all()

    for label_bd in enumerate(labels_db):
        vulnerabilityList = find_label_in_vulnerability(label_bd[1].name, df)
        if len(vulnerabilityList)>0:
            for vulnerability in vulnerabilityList:
                vulnerability_db = db.query(db.Vulnerability).options(load_only('name')).filter(db.Vulnerability.name == vulnerability.Name).first() 
                if vulnerability_db is None:
                    db.create(db.Vulnerability, name=vulnerability['Name'], status=vulnerability['Status'], 
                  description=vulnerability['Description'], reference=vulnerability['References'],
                  phase=vulnerability['Phase'], votes=vulnerability['Votes'], 
                  commets=vulnerability['Comments'], label =label_bd[1])
                    db.commit()
                    print(vulnerability['Name'])
                    print(green('ok.'))                    
    db.close()

if __name__ == "__main__":
    main()
